#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_3527272168916747465) {
   out_3527272168916747465[0] = 0;
   out_3527272168916747465[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_3527272168916747465[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_3527272168916747465[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_3527272168916747465[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_3527272168916747465[5] = -sin(in_vec[1]);
   out_3527272168916747465[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3527272168916747465[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3527272168916747465[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_3527272168916747465[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_3527272168916747465[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_3527272168916747465[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_3527272168916747465[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_3527272168916747465[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_3527272168916747465[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_3527272168916747465[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_3527272168916747465[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_3527272168916747465[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6045848623961905122) {
   out_6045848623961905122[0] = delta_x[0] + nom_x[0];
   out_6045848623961905122[1] = delta_x[1] + nom_x[1];
   out_6045848623961905122[2] = delta_x[2] + nom_x[2];
   out_6045848623961905122[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6045848623961905122[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6045848623961905122[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6045848623961905122[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6045848623961905122[7] = delta_x[6] + nom_x[7];
   out_6045848623961905122[8] = delta_x[7] + nom_x[8];
   out_6045848623961905122[9] = delta_x[8] + nom_x[9];
   out_6045848623961905122[10] = delta_x[9] + nom_x[10];
   out_6045848623961905122[11] = delta_x[10] + nom_x[11];
   out_6045848623961905122[12] = delta_x[11] + nom_x[12];
   out_6045848623961905122[13] = delta_x[12] + nom_x[13];
   out_6045848623961905122[14] = delta_x[13] + nom_x[14];
   out_6045848623961905122[15] = delta_x[14] + nom_x[15];
   out_6045848623961905122[16] = delta_x[15] + nom_x[16];
   out_6045848623961905122[17] = delta_x[16] + nom_x[17];
   out_6045848623961905122[18] = delta_x[17] + nom_x[18];
   out_6045848623961905122[19] = delta_x[18] + nom_x[19];
   out_6045848623961905122[20] = delta_x[19] + nom_x[20];
   out_6045848623961905122[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7169558580725911560) {
   out_7169558580725911560[0] = -nom_x[0] + true_x[0];
   out_7169558580725911560[1] = -nom_x[1] + true_x[1];
   out_7169558580725911560[2] = -nom_x[2] + true_x[2];
   out_7169558580725911560[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7169558580725911560[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7169558580725911560[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7169558580725911560[6] = -nom_x[7] + true_x[7];
   out_7169558580725911560[7] = -nom_x[8] + true_x[8];
   out_7169558580725911560[8] = -nom_x[9] + true_x[9];
   out_7169558580725911560[9] = -nom_x[10] + true_x[10];
   out_7169558580725911560[10] = -nom_x[11] + true_x[11];
   out_7169558580725911560[11] = -nom_x[12] + true_x[12];
   out_7169558580725911560[12] = -nom_x[13] + true_x[13];
   out_7169558580725911560[13] = -nom_x[14] + true_x[14];
   out_7169558580725911560[14] = -nom_x[15] + true_x[15];
   out_7169558580725911560[15] = -nom_x[16] + true_x[16];
   out_7169558580725911560[16] = -nom_x[17] + true_x[17];
   out_7169558580725911560[17] = -nom_x[18] + true_x[18];
   out_7169558580725911560[18] = -nom_x[19] + true_x[19];
   out_7169558580725911560[19] = -nom_x[20] + true_x[20];
   out_7169558580725911560[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_2233486417319465898) {
   out_2233486417319465898[0] = 1.0;
   out_2233486417319465898[1] = 0;
   out_2233486417319465898[2] = 0;
   out_2233486417319465898[3] = 0;
   out_2233486417319465898[4] = 0;
   out_2233486417319465898[5] = 0;
   out_2233486417319465898[6] = 0;
   out_2233486417319465898[7] = 0;
   out_2233486417319465898[8] = 0;
   out_2233486417319465898[9] = 0;
   out_2233486417319465898[10] = 0;
   out_2233486417319465898[11] = 0;
   out_2233486417319465898[12] = 0;
   out_2233486417319465898[13] = 0;
   out_2233486417319465898[14] = 0;
   out_2233486417319465898[15] = 0;
   out_2233486417319465898[16] = 0;
   out_2233486417319465898[17] = 0;
   out_2233486417319465898[18] = 0;
   out_2233486417319465898[19] = 0;
   out_2233486417319465898[20] = 0;
   out_2233486417319465898[21] = 0;
   out_2233486417319465898[22] = 1.0;
   out_2233486417319465898[23] = 0;
   out_2233486417319465898[24] = 0;
   out_2233486417319465898[25] = 0;
   out_2233486417319465898[26] = 0;
   out_2233486417319465898[27] = 0;
   out_2233486417319465898[28] = 0;
   out_2233486417319465898[29] = 0;
   out_2233486417319465898[30] = 0;
   out_2233486417319465898[31] = 0;
   out_2233486417319465898[32] = 0;
   out_2233486417319465898[33] = 0;
   out_2233486417319465898[34] = 0;
   out_2233486417319465898[35] = 0;
   out_2233486417319465898[36] = 0;
   out_2233486417319465898[37] = 0;
   out_2233486417319465898[38] = 0;
   out_2233486417319465898[39] = 0;
   out_2233486417319465898[40] = 0;
   out_2233486417319465898[41] = 0;
   out_2233486417319465898[42] = 0;
   out_2233486417319465898[43] = 0;
   out_2233486417319465898[44] = 1.0;
   out_2233486417319465898[45] = 0;
   out_2233486417319465898[46] = 0;
   out_2233486417319465898[47] = 0;
   out_2233486417319465898[48] = 0;
   out_2233486417319465898[49] = 0;
   out_2233486417319465898[50] = 0;
   out_2233486417319465898[51] = 0;
   out_2233486417319465898[52] = 0;
   out_2233486417319465898[53] = 0;
   out_2233486417319465898[54] = 0;
   out_2233486417319465898[55] = 0;
   out_2233486417319465898[56] = 0;
   out_2233486417319465898[57] = 0;
   out_2233486417319465898[58] = 0;
   out_2233486417319465898[59] = 0;
   out_2233486417319465898[60] = 0;
   out_2233486417319465898[61] = 0;
   out_2233486417319465898[62] = 0;
   out_2233486417319465898[63] = 0;
   out_2233486417319465898[64] = 0;
   out_2233486417319465898[65] = 0;
   out_2233486417319465898[66] = -0.5*state[4];
   out_2233486417319465898[67] = -0.5*state[5];
   out_2233486417319465898[68] = -0.5*state[6];
   out_2233486417319465898[69] = 0;
   out_2233486417319465898[70] = 0;
   out_2233486417319465898[71] = 0;
   out_2233486417319465898[72] = 0;
   out_2233486417319465898[73] = 0;
   out_2233486417319465898[74] = 0;
   out_2233486417319465898[75] = 0;
   out_2233486417319465898[76] = 0;
   out_2233486417319465898[77] = 0;
   out_2233486417319465898[78] = 0;
   out_2233486417319465898[79] = 0;
   out_2233486417319465898[80] = 0;
   out_2233486417319465898[81] = 0;
   out_2233486417319465898[82] = 0;
   out_2233486417319465898[83] = 0;
   out_2233486417319465898[84] = 0;
   out_2233486417319465898[85] = 0;
   out_2233486417319465898[86] = 0;
   out_2233486417319465898[87] = 0.5*state[3];
   out_2233486417319465898[88] = 0.5*state[6];
   out_2233486417319465898[89] = -0.5*state[5];
   out_2233486417319465898[90] = 0;
   out_2233486417319465898[91] = 0;
   out_2233486417319465898[92] = 0;
   out_2233486417319465898[93] = 0;
   out_2233486417319465898[94] = 0;
   out_2233486417319465898[95] = 0;
   out_2233486417319465898[96] = 0;
   out_2233486417319465898[97] = 0;
   out_2233486417319465898[98] = 0;
   out_2233486417319465898[99] = 0;
   out_2233486417319465898[100] = 0;
   out_2233486417319465898[101] = 0;
   out_2233486417319465898[102] = 0;
   out_2233486417319465898[103] = 0;
   out_2233486417319465898[104] = 0;
   out_2233486417319465898[105] = 0;
   out_2233486417319465898[106] = 0;
   out_2233486417319465898[107] = 0;
   out_2233486417319465898[108] = -0.5*state[6];
   out_2233486417319465898[109] = 0.5*state[3];
   out_2233486417319465898[110] = 0.5*state[4];
   out_2233486417319465898[111] = 0;
   out_2233486417319465898[112] = 0;
   out_2233486417319465898[113] = 0;
   out_2233486417319465898[114] = 0;
   out_2233486417319465898[115] = 0;
   out_2233486417319465898[116] = 0;
   out_2233486417319465898[117] = 0;
   out_2233486417319465898[118] = 0;
   out_2233486417319465898[119] = 0;
   out_2233486417319465898[120] = 0;
   out_2233486417319465898[121] = 0;
   out_2233486417319465898[122] = 0;
   out_2233486417319465898[123] = 0;
   out_2233486417319465898[124] = 0;
   out_2233486417319465898[125] = 0;
   out_2233486417319465898[126] = 0;
   out_2233486417319465898[127] = 0;
   out_2233486417319465898[128] = 0;
   out_2233486417319465898[129] = 0.5*state[5];
   out_2233486417319465898[130] = -0.5*state[4];
   out_2233486417319465898[131] = 0.5*state[3];
   out_2233486417319465898[132] = 0;
   out_2233486417319465898[133] = 0;
   out_2233486417319465898[134] = 0;
   out_2233486417319465898[135] = 0;
   out_2233486417319465898[136] = 0;
   out_2233486417319465898[137] = 0;
   out_2233486417319465898[138] = 0;
   out_2233486417319465898[139] = 0;
   out_2233486417319465898[140] = 0;
   out_2233486417319465898[141] = 0;
   out_2233486417319465898[142] = 0;
   out_2233486417319465898[143] = 0;
   out_2233486417319465898[144] = 0;
   out_2233486417319465898[145] = 0;
   out_2233486417319465898[146] = 0;
   out_2233486417319465898[147] = 0;
   out_2233486417319465898[148] = 0;
   out_2233486417319465898[149] = 0;
   out_2233486417319465898[150] = 0;
   out_2233486417319465898[151] = 0;
   out_2233486417319465898[152] = 0;
   out_2233486417319465898[153] = 1.0;
   out_2233486417319465898[154] = 0;
   out_2233486417319465898[155] = 0;
   out_2233486417319465898[156] = 0;
   out_2233486417319465898[157] = 0;
   out_2233486417319465898[158] = 0;
   out_2233486417319465898[159] = 0;
   out_2233486417319465898[160] = 0;
   out_2233486417319465898[161] = 0;
   out_2233486417319465898[162] = 0;
   out_2233486417319465898[163] = 0;
   out_2233486417319465898[164] = 0;
   out_2233486417319465898[165] = 0;
   out_2233486417319465898[166] = 0;
   out_2233486417319465898[167] = 0;
   out_2233486417319465898[168] = 0;
   out_2233486417319465898[169] = 0;
   out_2233486417319465898[170] = 0;
   out_2233486417319465898[171] = 0;
   out_2233486417319465898[172] = 0;
   out_2233486417319465898[173] = 0;
   out_2233486417319465898[174] = 0;
   out_2233486417319465898[175] = 1.0;
   out_2233486417319465898[176] = 0;
   out_2233486417319465898[177] = 0;
   out_2233486417319465898[178] = 0;
   out_2233486417319465898[179] = 0;
   out_2233486417319465898[180] = 0;
   out_2233486417319465898[181] = 0;
   out_2233486417319465898[182] = 0;
   out_2233486417319465898[183] = 0;
   out_2233486417319465898[184] = 0;
   out_2233486417319465898[185] = 0;
   out_2233486417319465898[186] = 0;
   out_2233486417319465898[187] = 0;
   out_2233486417319465898[188] = 0;
   out_2233486417319465898[189] = 0;
   out_2233486417319465898[190] = 0;
   out_2233486417319465898[191] = 0;
   out_2233486417319465898[192] = 0;
   out_2233486417319465898[193] = 0;
   out_2233486417319465898[194] = 0;
   out_2233486417319465898[195] = 0;
   out_2233486417319465898[196] = 0;
   out_2233486417319465898[197] = 1.0;
   out_2233486417319465898[198] = 0;
   out_2233486417319465898[199] = 0;
   out_2233486417319465898[200] = 0;
   out_2233486417319465898[201] = 0;
   out_2233486417319465898[202] = 0;
   out_2233486417319465898[203] = 0;
   out_2233486417319465898[204] = 0;
   out_2233486417319465898[205] = 0;
   out_2233486417319465898[206] = 0;
   out_2233486417319465898[207] = 0;
   out_2233486417319465898[208] = 0;
   out_2233486417319465898[209] = 0;
   out_2233486417319465898[210] = 0;
   out_2233486417319465898[211] = 0;
   out_2233486417319465898[212] = 0;
   out_2233486417319465898[213] = 0;
   out_2233486417319465898[214] = 0;
   out_2233486417319465898[215] = 0;
   out_2233486417319465898[216] = 0;
   out_2233486417319465898[217] = 0;
   out_2233486417319465898[218] = 0;
   out_2233486417319465898[219] = 1.0;
   out_2233486417319465898[220] = 0;
   out_2233486417319465898[221] = 0;
   out_2233486417319465898[222] = 0;
   out_2233486417319465898[223] = 0;
   out_2233486417319465898[224] = 0;
   out_2233486417319465898[225] = 0;
   out_2233486417319465898[226] = 0;
   out_2233486417319465898[227] = 0;
   out_2233486417319465898[228] = 0;
   out_2233486417319465898[229] = 0;
   out_2233486417319465898[230] = 0;
   out_2233486417319465898[231] = 0;
   out_2233486417319465898[232] = 0;
   out_2233486417319465898[233] = 0;
   out_2233486417319465898[234] = 0;
   out_2233486417319465898[235] = 0;
   out_2233486417319465898[236] = 0;
   out_2233486417319465898[237] = 0;
   out_2233486417319465898[238] = 0;
   out_2233486417319465898[239] = 0;
   out_2233486417319465898[240] = 0;
   out_2233486417319465898[241] = 1.0;
   out_2233486417319465898[242] = 0;
   out_2233486417319465898[243] = 0;
   out_2233486417319465898[244] = 0;
   out_2233486417319465898[245] = 0;
   out_2233486417319465898[246] = 0;
   out_2233486417319465898[247] = 0;
   out_2233486417319465898[248] = 0;
   out_2233486417319465898[249] = 0;
   out_2233486417319465898[250] = 0;
   out_2233486417319465898[251] = 0;
   out_2233486417319465898[252] = 0;
   out_2233486417319465898[253] = 0;
   out_2233486417319465898[254] = 0;
   out_2233486417319465898[255] = 0;
   out_2233486417319465898[256] = 0;
   out_2233486417319465898[257] = 0;
   out_2233486417319465898[258] = 0;
   out_2233486417319465898[259] = 0;
   out_2233486417319465898[260] = 0;
   out_2233486417319465898[261] = 0;
   out_2233486417319465898[262] = 0;
   out_2233486417319465898[263] = 1.0;
   out_2233486417319465898[264] = 0;
   out_2233486417319465898[265] = 0;
   out_2233486417319465898[266] = 0;
   out_2233486417319465898[267] = 0;
   out_2233486417319465898[268] = 0;
   out_2233486417319465898[269] = 0;
   out_2233486417319465898[270] = 0;
   out_2233486417319465898[271] = 0;
   out_2233486417319465898[272] = 0;
   out_2233486417319465898[273] = 0;
   out_2233486417319465898[274] = 0;
   out_2233486417319465898[275] = 0;
   out_2233486417319465898[276] = 0;
   out_2233486417319465898[277] = 0;
   out_2233486417319465898[278] = 0;
   out_2233486417319465898[279] = 0;
   out_2233486417319465898[280] = 0;
   out_2233486417319465898[281] = 0;
   out_2233486417319465898[282] = 0;
   out_2233486417319465898[283] = 0;
   out_2233486417319465898[284] = 0;
   out_2233486417319465898[285] = 1.0;
   out_2233486417319465898[286] = 0;
   out_2233486417319465898[287] = 0;
   out_2233486417319465898[288] = 0;
   out_2233486417319465898[289] = 0;
   out_2233486417319465898[290] = 0;
   out_2233486417319465898[291] = 0;
   out_2233486417319465898[292] = 0;
   out_2233486417319465898[293] = 0;
   out_2233486417319465898[294] = 0;
   out_2233486417319465898[295] = 0;
   out_2233486417319465898[296] = 0;
   out_2233486417319465898[297] = 0;
   out_2233486417319465898[298] = 0;
   out_2233486417319465898[299] = 0;
   out_2233486417319465898[300] = 0;
   out_2233486417319465898[301] = 0;
   out_2233486417319465898[302] = 0;
   out_2233486417319465898[303] = 0;
   out_2233486417319465898[304] = 0;
   out_2233486417319465898[305] = 0;
   out_2233486417319465898[306] = 0;
   out_2233486417319465898[307] = 1.0;
   out_2233486417319465898[308] = 0;
   out_2233486417319465898[309] = 0;
   out_2233486417319465898[310] = 0;
   out_2233486417319465898[311] = 0;
   out_2233486417319465898[312] = 0;
   out_2233486417319465898[313] = 0;
   out_2233486417319465898[314] = 0;
   out_2233486417319465898[315] = 0;
   out_2233486417319465898[316] = 0;
   out_2233486417319465898[317] = 0;
   out_2233486417319465898[318] = 0;
   out_2233486417319465898[319] = 0;
   out_2233486417319465898[320] = 0;
   out_2233486417319465898[321] = 0;
   out_2233486417319465898[322] = 0;
   out_2233486417319465898[323] = 0;
   out_2233486417319465898[324] = 0;
   out_2233486417319465898[325] = 0;
   out_2233486417319465898[326] = 0;
   out_2233486417319465898[327] = 0;
   out_2233486417319465898[328] = 0;
   out_2233486417319465898[329] = 1.0;
   out_2233486417319465898[330] = 0;
   out_2233486417319465898[331] = 0;
   out_2233486417319465898[332] = 0;
   out_2233486417319465898[333] = 0;
   out_2233486417319465898[334] = 0;
   out_2233486417319465898[335] = 0;
   out_2233486417319465898[336] = 0;
   out_2233486417319465898[337] = 0;
   out_2233486417319465898[338] = 0;
   out_2233486417319465898[339] = 0;
   out_2233486417319465898[340] = 0;
   out_2233486417319465898[341] = 0;
   out_2233486417319465898[342] = 0;
   out_2233486417319465898[343] = 0;
   out_2233486417319465898[344] = 0;
   out_2233486417319465898[345] = 0;
   out_2233486417319465898[346] = 0;
   out_2233486417319465898[347] = 0;
   out_2233486417319465898[348] = 0;
   out_2233486417319465898[349] = 0;
   out_2233486417319465898[350] = 0;
   out_2233486417319465898[351] = 1.0;
   out_2233486417319465898[352] = 0;
   out_2233486417319465898[353] = 0;
   out_2233486417319465898[354] = 0;
   out_2233486417319465898[355] = 0;
   out_2233486417319465898[356] = 0;
   out_2233486417319465898[357] = 0;
   out_2233486417319465898[358] = 0;
   out_2233486417319465898[359] = 0;
   out_2233486417319465898[360] = 0;
   out_2233486417319465898[361] = 0;
   out_2233486417319465898[362] = 0;
   out_2233486417319465898[363] = 0;
   out_2233486417319465898[364] = 0;
   out_2233486417319465898[365] = 0;
   out_2233486417319465898[366] = 0;
   out_2233486417319465898[367] = 0;
   out_2233486417319465898[368] = 0;
   out_2233486417319465898[369] = 0;
   out_2233486417319465898[370] = 0;
   out_2233486417319465898[371] = 0;
   out_2233486417319465898[372] = 0;
   out_2233486417319465898[373] = 1.0;
   out_2233486417319465898[374] = 0;
   out_2233486417319465898[375] = 0;
   out_2233486417319465898[376] = 0;
   out_2233486417319465898[377] = 0;
   out_2233486417319465898[378] = 0;
   out_2233486417319465898[379] = 0;
   out_2233486417319465898[380] = 0;
   out_2233486417319465898[381] = 0;
   out_2233486417319465898[382] = 0;
   out_2233486417319465898[383] = 0;
   out_2233486417319465898[384] = 0;
   out_2233486417319465898[385] = 0;
   out_2233486417319465898[386] = 0;
   out_2233486417319465898[387] = 0;
   out_2233486417319465898[388] = 0;
   out_2233486417319465898[389] = 0;
   out_2233486417319465898[390] = 0;
   out_2233486417319465898[391] = 0;
   out_2233486417319465898[392] = 0;
   out_2233486417319465898[393] = 0;
   out_2233486417319465898[394] = 0;
   out_2233486417319465898[395] = 1.0;
   out_2233486417319465898[396] = 0;
   out_2233486417319465898[397] = 0;
   out_2233486417319465898[398] = 0;
   out_2233486417319465898[399] = 0;
   out_2233486417319465898[400] = 0;
   out_2233486417319465898[401] = 0;
   out_2233486417319465898[402] = 0;
   out_2233486417319465898[403] = 0;
   out_2233486417319465898[404] = 0;
   out_2233486417319465898[405] = 0;
   out_2233486417319465898[406] = 0;
   out_2233486417319465898[407] = 0;
   out_2233486417319465898[408] = 0;
   out_2233486417319465898[409] = 0;
   out_2233486417319465898[410] = 0;
   out_2233486417319465898[411] = 0;
   out_2233486417319465898[412] = 0;
   out_2233486417319465898[413] = 0;
   out_2233486417319465898[414] = 0;
   out_2233486417319465898[415] = 0;
   out_2233486417319465898[416] = 0;
   out_2233486417319465898[417] = 1.0;
   out_2233486417319465898[418] = 0;
   out_2233486417319465898[419] = 0;
   out_2233486417319465898[420] = 0;
   out_2233486417319465898[421] = 0;
   out_2233486417319465898[422] = 0;
   out_2233486417319465898[423] = 0;
   out_2233486417319465898[424] = 0;
   out_2233486417319465898[425] = 0;
   out_2233486417319465898[426] = 0;
   out_2233486417319465898[427] = 0;
   out_2233486417319465898[428] = 0;
   out_2233486417319465898[429] = 0;
   out_2233486417319465898[430] = 0;
   out_2233486417319465898[431] = 0;
   out_2233486417319465898[432] = 0;
   out_2233486417319465898[433] = 0;
   out_2233486417319465898[434] = 0;
   out_2233486417319465898[435] = 0;
   out_2233486417319465898[436] = 0;
   out_2233486417319465898[437] = 0;
   out_2233486417319465898[438] = 0;
   out_2233486417319465898[439] = 1.0;
   out_2233486417319465898[440] = 0;
   out_2233486417319465898[441] = 0;
   out_2233486417319465898[442] = 0;
   out_2233486417319465898[443] = 0;
   out_2233486417319465898[444] = 0;
   out_2233486417319465898[445] = 0;
   out_2233486417319465898[446] = 0;
   out_2233486417319465898[447] = 0;
   out_2233486417319465898[448] = 0;
   out_2233486417319465898[449] = 0;
   out_2233486417319465898[450] = 0;
   out_2233486417319465898[451] = 0;
   out_2233486417319465898[452] = 0;
   out_2233486417319465898[453] = 0;
   out_2233486417319465898[454] = 0;
   out_2233486417319465898[455] = 0;
   out_2233486417319465898[456] = 0;
   out_2233486417319465898[457] = 0;
   out_2233486417319465898[458] = 0;
   out_2233486417319465898[459] = 0;
   out_2233486417319465898[460] = 0;
   out_2233486417319465898[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_394989617356335065) {
   out_394989617356335065[0] = dt*state[7] + state[0];
   out_394989617356335065[1] = dt*state[8] + state[1];
   out_394989617356335065[2] = dt*state[9] + state[2];
   out_394989617356335065[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_394989617356335065[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_394989617356335065[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_394989617356335065[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_394989617356335065[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_394989617356335065[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_394989617356335065[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_394989617356335065[10] = state[10];
   out_394989617356335065[11] = state[11];
   out_394989617356335065[12] = state[12];
   out_394989617356335065[13] = state[13];
   out_394989617356335065[14] = state[14];
   out_394989617356335065[15] = state[15];
   out_394989617356335065[16] = state[16];
   out_394989617356335065[17] = state[17];
   out_394989617356335065[18] = state[18];
   out_394989617356335065[19] = state[19];
   out_394989617356335065[20] = state[20];
   out_394989617356335065[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4258683105057258686) {
   out_4258683105057258686[0] = 1;
   out_4258683105057258686[1] = 0;
   out_4258683105057258686[2] = 0;
   out_4258683105057258686[3] = 0;
   out_4258683105057258686[4] = 0;
   out_4258683105057258686[5] = 0;
   out_4258683105057258686[6] = dt;
   out_4258683105057258686[7] = 0;
   out_4258683105057258686[8] = 0;
   out_4258683105057258686[9] = 0;
   out_4258683105057258686[10] = 0;
   out_4258683105057258686[11] = 0;
   out_4258683105057258686[12] = 0;
   out_4258683105057258686[13] = 0;
   out_4258683105057258686[14] = 0;
   out_4258683105057258686[15] = 0;
   out_4258683105057258686[16] = 0;
   out_4258683105057258686[17] = 0;
   out_4258683105057258686[18] = 0;
   out_4258683105057258686[19] = 0;
   out_4258683105057258686[20] = 0;
   out_4258683105057258686[21] = 0;
   out_4258683105057258686[22] = 1;
   out_4258683105057258686[23] = 0;
   out_4258683105057258686[24] = 0;
   out_4258683105057258686[25] = 0;
   out_4258683105057258686[26] = 0;
   out_4258683105057258686[27] = 0;
   out_4258683105057258686[28] = dt;
   out_4258683105057258686[29] = 0;
   out_4258683105057258686[30] = 0;
   out_4258683105057258686[31] = 0;
   out_4258683105057258686[32] = 0;
   out_4258683105057258686[33] = 0;
   out_4258683105057258686[34] = 0;
   out_4258683105057258686[35] = 0;
   out_4258683105057258686[36] = 0;
   out_4258683105057258686[37] = 0;
   out_4258683105057258686[38] = 0;
   out_4258683105057258686[39] = 0;
   out_4258683105057258686[40] = 0;
   out_4258683105057258686[41] = 0;
   out_4258683105057258686[42] = 0;
   out_4258683105057258686[43] = 0;
   out_4258683105057258686[44] = 1;
   out_4258683105057258686[45] = 0;
   out_4258683105057258686[46] = 0;
   out_4258683105057258686[47] = 0;
   out_4258683105057258686[48] = 0;
   out_4258683105057258686[49] = 0;
   out_4258683105057258686[50] = dt;
   out_4258683105057258686[51] = 0;
   out_4258683105057258686[52] = 0;
   out_4258683105057258686[53] = 0;
   out_4258683105057258686[54] = 0;
   out_4258683105057258686[55] = 0;
   out_4258683105057258686[56] = 0;
   out_4258683105057258686[57] = 0;
   out_4258683105057258686[58] = 0;
   out_4258683105057258686[59] = 0;
   out_4258683105057258686[60] = 0;
   out_4258683105057258686[61] = 0;
   out_4258683105057258686[62] = 0;
   out_4258683105057258686[63] = 0;
   out_4258683105057258686[64] = 0;
   out_4258683105057258686[65] = 0;
   out_4258683105057258686[66] = 1;
   out_4258683105057258686[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4258683105057258686[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4258683105057258686[69] = 0;
   out_4258683105057258686[70] = 0;
   out_4258683105057258686[71] = 0;
   out_4258683105057258686[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4258683105057258686[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4258683105057258686[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4258683105057258686[75] = 0;
   out_4258683105057258686[76] = 0;
   out_4258683105057258686[77] = 0;
   out_4258683105057258686[78] = 0;
   out_4258683105057258686[79] = 0;
   out_4258683105057258686[80] = 0;
   out_4258683105057258686[81] = 0;
   out_4258683105057258686[82] = 0;
   out_4258683105057258686[83] = 0;
   out_4258683105057258686[84] = 0;
   out_4258683105057258686[85] = 0;
   out_4258683105057258686[86] = 0;
   out_4258683105057258686[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4258683105057258686[88] = 1;
   out_4258683105057258686[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4258683105057258686[90] = 0;
   out_4258683105057258686[91] = 0;
   out_4258683105057258686[92] = 0;
   out_4258683105057258686[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4258683105057258686[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4258683105057258686[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4258683105057258686[96] = 0;
   out_4258683105057258686[97] = 0;
   out_4258683105057258686[98] = 0;
   out_4258683105057258686[99] = 0;
   out_4258683105057258686[100] = 0;
   out_4258683105057258686[101] = 0;
   out_4258683105057258686[102] = 0;
   out_4258683105057258686[103] = 0;
   out_4258683105057258686[104] = 0;
   out_4258683105057258686[105] = 0;
   out_4258683105057258686[106] = 0;
   out_4258683105057258686[107] = 0;
   out_4258683105057258686[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4258683105057258686[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4258683105057258686[110] = 1;
   out_4258683105057258686[111] = 0;
   out_4258683105057258686[112] = 0;
   out_4258683105057258686[113] = 0;
   out_4258683105057258686[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4258683105057258686[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4258683105057258686[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4258683105057258686[117] = 0;
   out_4258683105057258686[118] = 0;
   out_4258683105057258686[119] = 0;
   out_4258683105057258686[120] = 0;
   out_4258683105057258686[121] = 0;
   out_4258683105057258686[122] = 0;
   out_4258683105057258686[123] = 0;
   out_4258683105057258686[124] = 0;
   out_4258683105057258686[125] = 0;
   out_4258683105057258686[126] = 0;
   out_4258683105057258686[127] = 0;
   out_4258683105057258686[128] = 0;
   out_4258683105057258686[129] = 0;
   out_4258683105057258686[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4258683105057258686[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4258683105057258686[132] = 1;
   out_4258683105057258686[133] = 0;
   out_4258683105057258686[134] = 0;
   out_4258683105057258686[135] = 0;
   out_4258683105057258686[136] = 0;
   out_4258683105057258686[137] = 0;
   out_4258683105057258686[138] = 0;
   out_4258683105057258686[139] = 0;
   out_4258683105057258686[140] = 0;
   out_4258683105057258686[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4258683105057258686[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4258683105057258686[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4258683105057258686[144] = 0;
   out_4258683105057258686[145] = 0;
   out_4258683105057258686[146] = 0;
   out_4258683105057258686[147] = 0;
   out_4258683105057258686[148] = 0;
   out_4258683105057258686[149] = 0;
   out_4258683105057258686[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4258683105057258686[151] = 0;
   out_4258683105057258686[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4258683105057258686[153] = 0;
   out_4258683105057258686[154] = 1;
   out_4258683105057258686[155] = 0;
   out_4258683105057258686[156] = 0;
   out_4258683105057258686[157] = 0;
   out_4258683105057258686[158] = 0;
   out_4258683105057258686[159] = 0;
   out_4258683105057258686[160] = 0;
   out_4258683105057258686[161] = 0;
   out_4258683105057258686[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4258683105057258686[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4258683105057258686[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4258683105057258686[165] = 0;
   out_4258683105057258686[166] = 0;
   out_4258683105057258686[167] = 0;
   out_4258683105057258686[168] = 0;
   out_4258683105057258686[169] = 0;
   out_4258683105057258686[170] = 0;
   out_4258683105057258686[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4258683105057258686[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4258683105057258686[173] = 0;
   out_4258683105057258686[174] = 0;
   out_4258683105057258686[175] = 0;
   out_4258683105057258686[176] = 1;
   out_4258683105057258686[177] = 0;
   out_4258683105057258686[178] = 0;
   out_4258683105057258686[179] = 0;
   out_4258683105057258686[180] = 0;
   out_4258683105057258686[181] = 0;
   out_4258683105057258686[182] = 0;
   out_4258683105057258686[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4258683105057258686[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4258683105057258686[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4258683105057258686[186] = 0;
   out_4258683105057258686[187] = 0;
   out_4258683105057258686[188] = 0;
   out_4258683105057258686[189] = 0;
   out_4258683105057258686[190] = 0;
   out_4258683105057258686[191] = 0;
   out_4258683105057258686[192] = 0;
   out_4258683105057258686[193] = 0;
   out_4258683105057258686[194] = 0;
   out_4258683105057258686[195] = 0;
   out_4258683105057258686[196] = 0;
   out_4258683105057258686[197] = 0;
   out_4258683105057258686[198] = 1;
   out_4258683105057258686[199] = 0;
   out_4258683105057258686[200] = 0;
   out_4258683105057258686[201] = 0;
   out_4258683105057258686[202] = 0;
   out_4258683105057258686[203] = 0;
   out_4258683105057258686[204] = 0;
   out_4258683105057258686[205] = 0;
   out_4258683105057258686[206] = 0;
   out_4258683105057258686[207] = 0;
   out_4258683105057258686[208] = 0;
   out_4258683105057258686[209] = 0;
   out_4258683105057258686[210] = 0;
   out_4258683105057258686[211] = 0;
   out_4258683105057258686[212] = 0;
   out_4258683105057258686[213] = 0;
   out_4258683105057258686[214] = 0;
   out_4258683105057258686[215] = 0;
   out_4258683105057258686[216] = 0;
   out_4258683105057258686[217] = 0;
   out_4258683105057258686[218] = 0;
   out_4258683105057258686[219] = 0;
   out_4258683105057258686[220] = 1;
   out_4258683105057258686[221] = 0;
   out_4258683105057258686[222] = 0;
   out_4258683105057258686[223] = 0;
   out_4258683105057258686[224] = 0;
   out_4258683105057258686[225] = 0;
   out_4258683105057258686[226] = 0;
   out_4258683105057258686[227] = 0;
   out_4258683105057258686[228] = 0;
   out_4258683105057258686[229] = 0;
   out_4258683105057258686[230] = 0;
   out_4258683105057258686[231] = 0;
   out_4258683105057258686[232] = 0;
   out_4258683105057258686[233] = 0;
   out_4258683105057258686[234] = 0;
   out_4258683105057258686[235] = 0;
   out_4258683105057258686[236] = 0;
   out_4258683105057258686[237] = 0;
   out_4258683105057258686[238] = 0;
   out_4258683105057258686[239] = 0;
   out_4258683105057258686[240] = 0;
   out_4258683105057258686[241] = 0;
   out_4258683105057258686[242] = 1;
   out_4258683105057258686[243] = 0;
   out_4258683105057258686[244] = 0;
   out_4258683105057258686[245] = 0;
   out_4258683105057258686[246] = 0;
   out_4258683105057258686[247] = 0;
   out_4258683105057258686[248] = 0;
   out_4258683105057258686[249] = 0;
   out_4258683105057258686[250] = 0;
   out_4258683105057258686[251] = 0;
   out_4258683105057258686[252] = 0;
   out_4258683105057258686[253] = 0;
   out_4258683105057258686[254] = 0;
   out_4258683105057258686[255] = 0;
   out_4258683105057258686[256] = 0;
   out_4258683105057258686[257] = 0;
   out_4258683105057258686[258] = 0;
   out_4258683105057258686[259] = 0;
   out_4258683105057258686[260] = 0;
   out_4258683105057258686[261] = 0;
   out_4258683105057258686[262] = 0;
   out_4258683105057258686[263] = 0;
   out_4258683105057258686[264] = 1;
   out_4258683105057258686[265] = 0;
   out_4258683105057258686[266] = 0;
   out_4258683105057258686[267] = 0;
   out_4258683105057258686[268] = 0;
   out_4258683105057258686[269] = 0;
   out_4258683105057258686[270] = 0;
   out_4258683105057258686[271] = 0;
   out_4258683105057258686[272] = 0;
   out_4258683105057258686[273] = 0;
   out_4258683105057258686[274] = 0;
   out_4258683105057258686[275] = 0;
   out_4258683105057258686[276] = 0;
   out_4258683105057258686[277] = 0;
   out_4258683105057258686[278] = 0;
   out_4258683105057258686[279] = 0;
   out_4258683105057258686[280] = 0;
   out_4258683105057258686[281] = 0;
   out_4258683105057258686[282] = 0;
   out_4258683105057258686[283] = 0;
   out_4258683105057258686[284] = 0;
   out_4258683105057258686[285] = 0;
   out_4258683105057258686[286] = 1;
   out_4258683105057258686[287] = 0;
   out_4258683105057258686[288] = 0;
   out_4258683105057258686[289] = 0;
   out_4258683105057258686[290] = 0;
   out_4258683105057258686[291] = 0;
   out_4258683105057258686[292] = 0;
   out_4258683105057258686[293] = 0;
   out_4258683105057258686[294] = 0;
   out_4258683105057258686[295] = 0;
   out_4258683105057258686[296] = 0;
   out_4258683105057258686[297] = 0;
   out_4258683105057258686[298] = 0;
   out_4258683105057258686[299] = 0;
   out_4258683105057258686[300] = 0;
   out_4258683105057258686[301] = 0;
   out_4258683105057258686[302] = 0;
   out_4258683105057258686[303] = 0;
   out_4258683105057258686[304] = 0;
   out_4258683105057258686[305] = 0;
   out_4258683105057258686[306] = 0;
   out_4258683105057258686[307] = 0;
   out_4258683105057258686[308] = 1;
   out_4258683105057258686[309] = 0;
   out_4258683105057258686[310] = 0;
   out_4258683105057258686[311] = 0;
   out_4258683105057258686[312] = 0;
   out_4258683105057258686[313] = 0;
   out_4258683105057258686[314] = 0;
   out_4258683105057258686[315] = 0;
   out_4258683105057258686[316] = 0;
   out_4258683105057258686[317] = 0;
   out_4258683105057258686[318] = 0;
   out_4258683105057258686[319] = 0;
   out_4258683105057258686[320] = 0;
   out_4258683105057258686[321] = 0;
   out_4258683105057258686[322] = 0;
   out_4258683105057258686[323] = 0;
   out_4258683105057258686[324] = 0;
   out_4258683105057258686[325] = 0;
   out_4258683105057258686[326] = 0;
   out_4258683105057258686[327] = 0;
   out_4258683105057258686[328] = 0;
   out_4258683105057258686[329] = 0;
   out_4258683105057258686[330] = 1;
   out_4258683105057258686[331] = 0;
   out_4258683105057258686[332] = 0;
   out_4258683105057258686[333] = 0;
   out_4258683105057258686[334] = 0;
   out_4258683105057258686[335] = 0;
   out_4258683105057258686[336] = 0;
   out_4258683105057258686[337] = 0;
   out_4258683105057258686[338] = 0;
   out_4258683105057258686[339] = 0;
   out_4258683105057258686[340] = 0;
   out_4258683105057258686[341] = 0;
   out_4258683105057258686[342] = 0;
   out_4258683105057258686[343] = 0;
   out_4258683105057258686[344] = 0;
   out_4258683105057258686[345] = 0;
   out_4258683105057258686[346] = 0;
   out_4258683105057258686[347] = 0;
   out_4258683105057258686[348] = 0;
   out_4258683105057258686[349] = 0;
   out_4258683105057258686[350] = 0;
   out_4258683105057258686[351] = 0;
   out_4258683105057258686[352] = 1;
   out_4258683105057258686[353] = 0;
   out_4258683105057258686[354] = 0;
   out_4258683105057258686[355] = 0;
   out_4258683105057258686[356] = 0;
   out_4258683105057258686[357] = 0;
   out_4258683105057258686[358] = 0;
   out_4258683105057258686[359] = 0;
   out_4258683105057258686[360] = 0;
   out_4258683105057258686[361] = 0;
   out_4258683105057258686[362] = 0;
   out_4258683105057258686[363] = 0;
   out_4258683105057258686[364] = 0;
   out_4258683105057258686[365] = 0;
   out_4258683105057258686[366] = 0;
   out_4258683105057258686[367] = 0;
   out_4258683105057258686[368] = 0;
   out_4258683105057258686[369] = 0;
   out_4258683105057258686[370] = 0;
   out_4258683105057258686[371] = 0;
   out_4258683105057258686[372] = 0;
   out_4258683105057258686[373] = 0;
   out_4258683105057258686[374] = 1;
   out_4258683105057258686[375] = 0;
   out_4258683105057258686[376] = 0;
   out_4258683105057258686[377] = 0;
   out_4258683105057258686[378] = 0;
   out_4258683105057258686[379] = 0;
   out_4258683105057258686[380] = 0;
   out_4258683105057258686[381] = 0;
   out_4258683105057258686[382] = 0;
   out_4258683105057258686[383] = 0;
   out_4258683105057258686[384] = 0;
   out_4258683105057258686[385] = 0;
   out_4258683105057258686[386] = 0;
   out_4258683105057258686[387] = 0;
   out_4258683105057258686[388] = 0;
   out_4258683105057258686[389] = 0;
   out_4258683105057258686[390] = 0;
   out_4258683105057258686[391] = 0;
   out_4258683105057258686[392] = 0;
   out_4258683105057258686[393] = 0;
   out_4258683105057258686[394] = 0;
   out_4258683105057258686[395] = 0;
   out_4258683105057258686[396] = 1;
   out_4258683105057258686[397] = 0;
   out_4258683105057258686[398] = 0;
   out_4258683105057258686[399] = 0;
   out_4258683105057258686[400] = 0;
   out_4258683105057258686[401] = 0;
   out_4258683105057258686[402] = 0;
   out_4258683105057258686[403] = 0;
   out_4258683105057258686[404] = 0;
   out_4258683105057258686[405] = 0;
   out_4258683105057258686[406] = 0;
   out_4258683105057258686[407] = 0;
   out_4258683105057258686[408] = 0;
   out_4258683105057258686[409] = 0;
   out_4258683105057258686[410] = 0;
   out_4258683105057258686[411] = 0;
   out_4258683105057258686[412] = 0;
   out_4258683105057258686[413] = 0;
   out_4258683105057258686[414] = 0;
   out_4258683105057258686[415] = 0;
   out_4258683105057258686[416] = 0;
   out_4258683105057258686[417] = 0;
   out_4258683105057258686[418] = 1;
   out_4258683105057258686[419] = 0;
   out_4258683105057258686[420] = 0;
   out_4258683105057258686[421] = 0;
   out_4258683105057258686[422] = 0;
   out_4258683105057258686[423] = 0;
   out_4258683105057258686[424] = 0;
   out_4258683105057258686[425] = 0;
   out_4258683105057258686[426] = 0;
   out_4258683105057258686[427] = 0;
   out_4258683105057258686[428] = 0;
   out_4258683105057258686[429] = 0;
   out_4258683105057258686[430] = 0;
   out_4258683105057258686[431] = 0;
   out_4258683105057258686[432] = 0;
   out_4258683105057258686[433] = 0;
   out_4258683105057258686[434] = 0;
   out_4258683105057258686[435] = 0;
   out_4258683105057258686[436] = 0;
   out_4258683105057258686[437] = 0;
   out_4258683105057258686[438] = 0;
   out_4258683105057258686[439] = 0;
   out_4258683105057258686[440] = 1;
}
void h_4(double *state, double *unused, double *out_630004665006177454) {
   out_630004665006177454[0] = state[10] + state[13];
   out_630004665006177454[1] = state[11] + state[14];
   out_630004665006177454[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2557128699668065886) {
   out_2557128699668065886[0] = 0;
   out_2557128699668065886[1] = 0;
   out_2557128699668065886[2] = 0;
   out_2557128699668065886[3] = 0;
   out_2557128699668065886[4] = 0;
   out_2557128699668065886[5] = 0;
   out_2557128699668065886[6] = 0;
   out_2557128699668065886[7] = 0;
   out_2557128699668065886[8] = 0;
   out_2557128699668065886[9] = 0;
   out_2557128699668065886[10] = 1;
   out_2557128699668065886[11] = 0;
   out_2557128699668065886[12] = 0;
   out_2557128699668065886[13] = 1;
   out_2557128699668065886[14] = 0;
   out_2557128699668065886[15] = 0;
   out_2557128699668065886[16] = 0;
   out_2557128699668065886[17] = 0;
   out_2557128699668065886[18] = 0;
   out_2557128699668065886[19] = 0;
   out_2557128699668065886[20] = 0;
   out_2557128699668065886[21] = 0;
   out_2557128699668065886[22] = 0;
   out_2557128699668065886[23] = 0;
   out_2557128699668065886[24] = 0;
   out_2557128699668065886[25] = 0;
   out_2557128699668065886[26] = 0;
   out_2557128699668065886[27] = 0;
   out_2557128699668065886[28] = 0;
   out_2557128699668065886[29] = 0;
   out_2557128699668065886[30] = 0;
   out_2557128699668065886[31] = 0;
   out_2557128699668065886[32] = 0;
   out_2557128699668065886[33] = 1;
   out_2557128699668065886[34] = 0;
   out_2557128699668065886[35] = 0;
   out_2557128699668065886[36] = 1;
   out_2557128699668065886[37] = 0;
   out_2557128699668065886[38] = 0;
   out_2557128699668065886[39] = 0;
   out_2557128699668065886[40] = 0;
   out_2557128699668065886[41] = 0;
   out_2557128699668065886[42] = 0;
   out_2557128699668065886[43] = 0;
   out_2557128699668065886[44] = 0;
   out_2557128699668065886[45] = 0;
   out_2557128699668065886[46] = 0;
   out_2557128699668065886[47] = 0;
   out_2557128699668065886[48] = 0;
   out_2557128699668065886[49] = 0;
   out_2557128699668065886[50] = 0;
   out_2557128699668065886[51] = 0;
   out_2557128699668065886[52] = 0;
   out_2557128699668065886[53] = 0;
   out_2557128699668065886[54] = 0;
   out_2557128699668065886[55] = 0;
   out_2557128699668065886[56] = 1;
   out_2557128699668065886[57] = 0;
   out_2557128699668065886[58] = 0;
   out_2557128699668065886[59] = 1;
   out_2557128699668065886[60] = 0;
   out_2557128699668065886[61] = 0;
   out_2557128699668065886[62] = 0;
   out_2557128699668065886[63] = 0;
   out_2557128699668065886[64] = 0;
   out_2557128699668065886[65] = 0;
}
void h_9(double *state, double *unused, double *out_305682243973039777) {
   out_305682243973039777[0] = state[10];
   out_305682243973039777[1] = state[11];
   out_305682243973039777[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2315939053038475241) {
   out_2315939053038475241[0] = 0;
   out_2315939053038475241[1] = 0;
   out_2315939053038475241[2] = 0;
   out_2315939053038475241[3] = 0;
   out_2315939053038475241[4] = 0;
   out_2315939053038475241[5] = 0;
   out_2315939053038475241[6] = 0;
   out_2315939053038475241[7] = 0;
   out_2315939053038475241[8] = 0;
   out_2315939053038475241[9] = 0;
   out_2315939053038475241[10] = 1;
   out_2315939053038475241[11] = 0;
   out_2315939053038475241[12] = 0;
   out_2315939053038475241[13] = 0;
   out_2315939053038475241[14] = 0;
   out_2315939053038475241[15] = 0;
   out_2315939053038475241[16] = 0;
   out_2315939053038475241[17] = 0;
   out_2315939053038475241[18] = 0;
   out_2315939053038475241[19] = 0;
   out_2315939053038475241[20] = 0;
   out_2315939053038475241[21] = 0;
   out_2315939053038475241[22] = 0;
   out_2315939053038475241[23] = 0;
   out_2315939053038475241[24] = 0;
   out_2315939053038475241[25] = 0;
   out_2315939053038475241[26] = 0;
   out_2315939053038475241[27] = 0;
   out_2315939053038475241[28] = 0;
   out_2315939053038475241[29] = 0;
   out_2315939053038475241[30] = 0;
   out_2315939053038475241[31] = 0;
   out_2315939053038475241[32] = 0;
   out_2315939053038475241[33] = 1;
   out_2315939053038475241[34] = 0;
   out_2315939053038475241[35] = 0;
   out_2315939053038475241[36] = 0;
   out_2315939053038475241[37] = 0;
   out_2315939053038475241[38] = 0;
   out_2315939053038475241[39] = 0;
   out_2315939053038475241[40] = 0;
   out_2315939053038475241[41] = 0;
   out_2315939053038475241[42] = 0;
   out_2315939053038475241[43] = 0;
   out_2315939053038475241[44] = 0;
   out_2315939053038475241[45] = 0;
   out_2315939053038475241[46] = 0;
   out_2315939053038475241[47] = 0;
   out_2315939053038475241[48] = 0;
   out_2315939053038475241[49] = 0;
   out_2315939053038475241[50] = 0;
   out_2315939053038475241[51] = 0;
   out_2315939053038475241[52] = 0;
   out_2315939053038475241[53] = 0;
   out_2315939053038475241[54] = 0;
   out_2315939053038475241[55] = 0;
   out_2315939053038475241[56] = 1;
   out_2315939053038475241[57] = 0;
   out_2315939053038475241[58] = 0;
   out_2315939053038475241[59] = 0;
   out_2315939053038475241[60] = 0;
   out_2315939053038475241[61] = 0;
   out_2315939053038475241[62] = 0;
   out_2315939053038475241[63] = 0;
   out_2315939053038475241[64] = 0;
   out_2315939053038475241[65] = 0;
}
void h_10(double *state, double *unused, double *out_3290065580213621136) {
   out_3290065580213621136[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3290065580213621136[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3290065580213621136[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5952593910960601130) {
   out_5952593910960601130[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5952593910960601130[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5952593910960601130[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5952593910960601130[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5952593910960601130[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5952593910960601130[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5952593910960601130[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5952593910960601130[7] = 0;
   out_5952593910960601130[8] = 0;
   out_5952593910960601130[9] = 0;
   out_5952593910960601130[10] = 0;
   out_5952593910960601130[11] = 0;
   out_5952593910960601130[12] = 0;
   out_5952593910960601130[13] = 0;
   out_5952593910960601130[14] = 0;
   out_5952593910960601130[15] = 0;
   out_5952593910960601130[16] = 1;
   out_5952593910960601130[17] = 0;
   out_5952593910960601130[18] = 0;
   out_5952593910960601130[19] = 1;
   out_5952593910960601130[20] = 0;
   out_5952593910960601130[21] = 0;
   out_5952593910960601130[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5952593910960601130[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5952593910960601130[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5952593910960601130[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5952593910960601130[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5952593910960601130[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5952593910960601130[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5952593910960601130[29] = 0;
   out_5952593910960601130[30] = 0;
   out_5952593910960601130[31] = 0;
   out_5952593910960601130[32] = 0;
   out_5952593910960601130[33] = 0;
   out_5952593910960601130[34] = 0;
   out_5952593910960601130[35] = 0;
   out_5952593910960601130[36] = 0;
   out_5952593910960601130[37] = 0;
   out_5952593910960601130[38] = 0;
   out_5952593910960601130[39] = 1;
   out_5952593910960601130[40] = 0;
   out_5952593910960601130[41] = 0;
   out_5952593910960601130[42] = 1;
   out_5952593910960601130[43] = 0;
   out_5952593910960601130[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5952593910960601130[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5952593910960601130[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5952593910960601130[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5952593910960601130[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5952593910960601130[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5952593910960601130[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5952593910960601130[51] = 0;
   out_5952593910960601130[52] = 0;
   out_5952593910960601130[53] = 0;
   out_5952593910960601130[54] = 0;
   out_5952593910960601130[55] = 0;
   out_5952593910960601130[56] = 0;
   out_5952593910960601130[57] = 0;
   out_5952593910960601130[58] = 0;
   out_5952593910960601130[59] = 0;
   out_5952593910960601130[60] = 0;
   out_5952593910960601130[61] = 0;
   out_5952593910960601130[62] = 1;
   out_5952593910960601130[63] = 0;
   out_5952593910960601130[64] = 0;
   out_5952593910960601130[65] = 1;
}
void h_12(double *state, double *unused, double *out_4778882070426826303) {
   out_4778882070426826303[0] = state[0];
   out_4778882070426826303[1] = state[1];
   out_4778882070426826303[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2462327708363895909) {
   out_2462327708363895909[0] = 1;
   out_2462327708363895909[1] = 0;
   out_2462327708363895909[2] = 0;
   out_2462327708363895909[3] = 0;
   out_2462327708363895909[4] = 0;
   out_2462327708363895909[5] = 0;
   out_2462327708363895909[6] = 0;
   out_2462327708363895909[7] = 0;
   out_2462327708363895909[8] = 0;
   out_2462327708363895909[9] = 0;
   out_2462327708363895909[10] = 0;
   out_2462327708363895909[11] = 0;
   out_2462327708363895909[12] = 0;
   out_2462327708363895909[13] = 0;
   out_2462327708363895909[14] = 0;
   out_2462327708363895909[15] = 0;
   out_2462327708363895909[16] = 0;
   out_2462327708363895909[17] = 0;
   out_2462327708363895909[18] = 0;
   out_2462327708363895909[19] = 0;
   out_2462327708363895909[20] = 0;
   out_2462327708363895909[21] = 0;
   out_2462327708363895909[22] = 0;
   out_2462327708363895909[23] = 1;
   out_2462327708363895909[24] = 0;
   out_2462327708363895909[25] = 0;
   out_2462327708363895909[26] = 0;
   out_2462327708363895909[27] = 0;
   out_2462327708363895909[28] = 0;
   out_2462327708363895909[29] = 0;
   out_2462327708363895909[30] = 0;
   out_2462327708363895909[31] = 0;
   out_2462327708363895909[32] = 0;
   out_2462327708363895909[33] = 0;
   out_2462327708363895909[34] = 0;
   out_2462327708363895909[35] = 0;
   out_2462327708363895909[36] = 0;
   out_2462327708363895909[37] = 0;
   out_2462327708363895909[38] = 0;
   out_2462327708363895909[39] = 0;
   out_2462327708363895909[40] = 0;
   out_2462327708363895909[41] = 0;
   out_2462327708363895909[42] = 0;
   out_2462327708363895909[43] = 0;
   out_2462327708363895909[44] = 0;
   out_2462327708363895909[45] = 0;
   out_2462327708363895909[46] = 1;
   out_2462327708363895909[47] = 0;
   out_2462327708363895909[48] = 0;
   out_2462327708363895909[49] = 0;
   out_2462327708363895909[50] = 0;
   out_2462327708363895909[51] = 0;
   out_2462327708363895909[52] = 0;
   out_2462327708363895909[53] = 0;
   out_2462327708363895909[54] = 0;
   out_2462327708363895909[55] = 0;
   out_2462327708363895909[56] = 0;
   out_2462327708363895909[57] = 0;
   out_2462327708363895909[58] = 0;
   out_2462327708363895909[59] = 0;
   out_2462327708363895909[60] = 0;
   out_2462327708363895909[61] = 0;
   out_2462327708363895909[62] = 0;
   out_2462327708363895909[63] = 0;
   out_2462327708363895909[64] = 0;
   out_2462327708363895909[65] = 0;
}
void h_35(double *state, double *unused, double *out_5254255709407145805) {
   out_5254255709407145805[0] = state[7];
   out_5254255709407145805[1] = state[8];
   out_5254255709407145805[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5207890740688909618) {
   out_5207890740688909618[0] = 0;
   out_5207890740688909618[1] = 0;
   out_5207890740688909618[2] = 0;
   out_5207890740688909618[3] = 0;
   out_5207890740688909618[4] = 0;
   out_5207890740688909618[5] = 0;
   out_5207890740688909618[6] = 0;
   out_5207890740688909618[7] = 1;
   out_5207890740688909618[8] = 0;
   out_5207890740688909618[9] = 0;
   out_5207890740688909618[10] = 0;
   out_5207890740688909618[11] = 0;
   out_5207890740688909618[12] = 0;
   out_5207890740688909618[13] = 0;
   out_5207890740688909618[14] = 0;
   out_5207890740688909618[15] = 0;
   out_5207890740688909618[16] = 0;
   out_5207890740688909618[17] = 0;
   out_5207890740688909618[18] = 0;
   out_5207890740688909618[19] = 0;
   out_5207890740688909618[20] = 0;
   out_5207890740688909618[21] = 0;
   out_5207890740688909618[22] = 0;
   out_5207890740688909618[23] = 0;
   out_5207890740688909618[24] = 0;
   out_5207890740688909618[25] = 0;
   out_5207890740688909618[26] = 0;
   out_5207890740688909618[27] = 0;
   out_5207890740688909618[28] = 0;
   out_5207890740688909618[29] = 0;
   out_5207890740688909618[30] = 1;
   out_5207890740688909618[31] = 0;
   out_5207890740688909618[32] = 0;
   out_5207890740688909618[33] = 0;
   out_5207890740688909618[34] = 0;
   out_5207890740688909618[35] = 0;
   out_5207890740688909618[36] = 0;
   out_5207890740688909618[37] = 0;
   out_5207890740688909618[38] = 0;
   out_5207890740688909618[39] = 0;
   out_5207890740688909618[40] = 0;
   out_5207890740688909618[41] = 0;
   out_5207890740688909618[42] = 0;
   out_5207890740688909618[43] = 0;
   out_5207890740688909618[44] = 0;
   out_5207890740688909618[45] = 0;
   out_5207890740688909618[46] = 0;
   out_5207890740688909618[47] = 0;
   out_5207890740688909618[48] = 0;
   out_5207890740688909618[49] = 0;
   out_5207890740688909618[50] = 0;
   out_5207890740688909618[51] = 0;
   out_5207890740688909618[52] = 0;
   out_5207890740688909618[53] = 1;
   out_5207890740688909618[54] = 0;
   out_5207890740688909618[55] = 0;
   out_5207890740688909618[56] = 0;
   out_5207890740688909618[57] = 0;
   out_5207890740688909618[58] = 0;
   out_5207890740688909618[59] = 0;
   out_5207890740688909618[60] = 0;
   out_5207890740688909618[61] = 0;
   out_5207890740688909618[62] = 0;
   out_5207890740688909618[63] = 0;
   out_5207890740688909618[64] = 0;
   out_5207890740688909618[65] = 0;
}
void h_32(double *state, double *unused, double *out_2690950986992451521) {
   out_2690950986992451521[0] = state[3];
   out_2690950986992451521[1] = state[4];
   out_2690950986992451521[2] = state[5];
   out_2690950986992451521[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7437548960813029440) {
   out_7437548960813029440[0] = 0;
   out_7437548960813029440[1] = 0;
   out_7437548960813029440[2] = 0;
   out_7437548960813029440[3] = 1;
   out_7437548960813029440[4] = 0;
   out_7437548960813029440[5] = 0;
   out_7437548960813029440[6] = 0;
   out_7437548960813029440[7] = 0;
   out_7437548960813029440[8] = 0;
   out_7437548960813029440[9] = 0;
   out_7437548960813029440[10] = 0;
   out_7437548960813029440[11] = 0;
   out_7437548960813029440[12] = 0;
   out_7437548960813029440[13] = 0;
   out_7437548960813029440[14] = 0;
   out_7437548960813029440[15] = 0;
   out_7437548960813029440[16] = 0;
   out_7437548960813029440[17] = 0;
   out_7437548960813029440[18] = 0;
   out_7437548960813029440[19] = 0;
   out_7437548960813029440[20] = 0;
   out_7437548960813029440[21] = 0;
   out_7437548960813029440[22] = 0;
   out_7437548960813029440[23] = 0;
   out_7437548960813029440[24] = 0;
   out_7437548960813029440[25] = 0;
   out_7437548960813029440[26] = 1;
   out_7437548960813029440[27] = 0;
   out_7437548960813029440[28] = 0;
   out_7437548960813029440[29] = 0;
   out_7437548960813029440[30] = 0;
   out_7437548960813029440[31] = 0;
   out_7437548960813029440[32] = 0;
   out_7437548960813029440[33] = 0;
   out_7437548960813029440[34] = 0;
   out_7437548960813029440[35] = 0;
   out_7437548960813029440[36] = 0;
   out_7437548960813029440[37] = 0;
   out_7437548960813029440[38] = 0;
   out_7437548960813029440[39] = 0;
   out_7437548960813029440[40] = 0;
   out_7437548960813029440[41] = 0;
   out_7437548960813029440[42] = 0;
   out_7437548960813029440[43] = 0;
   out_7437548960813029440[44] = 0;
   out_7437548960813029440[45] = 0;
   out_7437548960813029440[46] = 0;
   out_7437548960813029440[47] = 0;
   out_7437548960813029440[48] = 0;
   out_7437548960813029440[49] = 1;
   out_7437548960813029440[50] = 0;
   out_7437548960813029440[51] = 0;
   out_7437548960813029440[52] = 0;
   out_7437548960813029440[53] = 0;
   out_7437548960813029440[54] = 0;
   out_7437548960813029440[55] = 0;
   out_7437548960813029440[56] = 0;
   out_7437548960813029440[57] = 0;
   out_7437548960813029440[58] = 0;
   out_7437548960813029440[59] = 0;
   out_7437548960813029440[60] = 0;
   out_7437548960813029440[61] = 0;
   out_7437548960813029440[62] = 0;
   out_7437548960813029440[63] = 0;
   out_7437548960813029440[64] = 0;
   out_7437548960813029440[65] = 0;
   out_7437548960813029440[66] = 0;
   out_7437548960813029440[67] = 0;
   out_7437548960813029440[68] = 0;
   out_7437548960813029440[69] = 0;
   out_7437548960813029440[70] = 0;
   out_7437548960813029440[71] = 0;
   out_7437548960813029440[72] = 1;
   out_7437548960813029440[73] = 0;
   out_7437548960813029440[74] = 0;
   out_7437548960813029440[75] = 0;
   out_7437548960813029440[76] = 0;
   out_7437548960813029440[77] = 0;
   out_7437548960813029440[78] = 0;
   out_7437548960813029440[79] = 0;
   out_7437548960813029440[80] = 0;
   out_7437548960813029440[81] = 0;
   out_7437548960813029440[82] = 0;
   out_7437548960813029440[83] = 0;
   out_7437548960813029440[84] = 0;
   out_7437548960813029440[85] = 0;
   out_7437548960813029440[86] = 0;
   out_7437548960813029440[87] = 0;
}
void h_13(double *state, double *unused, double *out_2838899766990680185) {
   out_2838899766990680185[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_2838899766990680185[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_2838899766990680185[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6243414584483540250) {
   out_6243414584483540250[0] = 0;
   out_6243414584483540250[1] = 0;
   out_6243414584483540250[2] = 0;
   out_6243414584483540250[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6243414584483540250[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6243414584483540250[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6243414584483540250[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6243414584483540250[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6243414584483540250[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6243414584483540250[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6243414584483540250[10] = 0;
   out_6243414584483540250[11] = 0;
   out_6243414584483540250[12] = 0;
   out_6243414584483540250[13] = 0;
   out_6243414584483540250[14] = 0;
   out_6243414584483540250[15] = 0;
   out_6243414584483540250[16] = 0;
   out_6243414584483540250[17] = 0;
   out_6243414584483540250[18] = 0;
   out_6243414584483540250[19] = 0;
   out_6243414584483540250[20] = 0;
   out_6243414584483540250[21] = 0;
   out_6243414584483540250[22] = 0;
   out_6243414584483540250[23] = 0;
   out_6243414584483540250[24] = 0;
   out_6243414584483540250[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6243414584483540250[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6243414584483540250[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6243414584483540250[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6243414584483540250[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6243414584483540250[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6243414584483540250[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6243414584483540250[32] = 0;
   out_6243414584483540250[33] = 0;
   out_6243414584483540250[34] = 0;
   out_6243414584483540250[35] = 0;
   out_6243414584483540250[36] = 0;
   out_6243414584483540250[37] = 0;
   out_6243414584483540250[38] = 0;
   out_6243414584483540250[39] = 0;
   out_6243414584483540250[40] = 0;
   out_6243414584483540250[41] = 0;
   out_6243414584483540250[42] = 0;
   out_6243414584483540250[43] = 0;
   out_6243414584483540250[44] = 0;
   out_6243414584483540250[45] = 0;
   out_6243414584483540250[46] = 0;
   out_6243414584483540250[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6243414584483540250[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6243414584483540250[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6243414584483540250[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6243414584483540250[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6243414584483540250[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6243414584483540250[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6243414584483540250[54] = 0;
   out_6243414584483540250[55] = 0;
   out_6243414584483540250[56] = 0;
   out_6243414584483540250[57] = 0;
   out_6243414584483540250[58] = 0;
   out_6243414584483540250[59] = 0;
   out_6243414584483540250[60] = 0;
   out_6243414584483540250[61] = 0;
   out_6243414584483540250[62] = 0;
   out_6243414584483540250[63] = 0;
   out_6243414584483540250[64] = 0;
   out_6243414584483540250[65] = 0;
}
void h_14(double *state, double *unused, double *out_305682243973039777) {
   out_305682243973039777[0] = state[10];
   out_305682243973039777[1] = state[11];
   out_305682243973039777[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2315939053038475241) {
   out_2315939053038475241[0] = 0;
   out_2315939053038475241[1] = 0;
   out_2315939053038475241[2] = 0;
   out_2315939053038475241[3] = 0;
   out_2315939053038475241[4] = 0;
   out_2315939053038475241[5] = 0;
   out_2315939053038475241[6] = 0;
   out_2315939053038475241[7] = 0;
   out_2315939053038475241[8] = 0;
   out_2315939053038475241[9] = 0;
   out_2315939053038475241[10] = 1;
   out_2315939053038475241[11] = 0;
   out_2315939053038475241[12] = 0;
   out_2315939053038475241[13] = 0;
   out_2315939053038475241[14] = 0;
   out_2315939053038475241[15] = 0;
   out_2315939053038475241[16] = 0;
   out_2315939053038475241[17] = 0;
   out_2315939053038475241[18] = 0;
   out_2315939053038475241[19] = 0;
   out_2315939053038475241[20] = 0;
   out_2315939053038475241[21] = 0;
   out_2315939053038475241[22] = 0;
   out_2315939053038475241[23] = 0;
   out_2315939053038475241[24] = 0;
   out_2315939053038475241[25] = 0;
   out_2315939053038475241[26] = 0;
   out_2315939053038475241[27] = 0;
   out_2315939053038475241[28] = 0;
   out_2315939053038475241[29] = 0;
   out_2315939053038475241[30] = 0;
   out_2315939053038475241[31] = 0;
   out_2315939053038475241[32] = 0;
   out_2315939053038475241[33] = 1;
   out_2315939053038475241[34] = 0;
   out_2315939053038475241[35] = 0;
   out_2315939053038475241[36] = 0;
   out_2315939053038475241[37] = 0;
   out_2315939053038475241[38] = 0;
   out_2315939053038475241[39] = 0;
   out_2315939053038475241[40] = 0;
   out_2315939053038475241[41] = 0;
   out_2315939053038475241[42] = 0;
   out_2315939053038475241[43] = 0;
   out_2315939053038475241[44] = 0;
   out_2315939053038475241[45] = 0;
   out_2315939053038475241[46] = 0;
   out_2315939053038475241[47] = 0;
   out_2315939053038475241[48] = 0;
   out_2315939053038475241[49] = 0;
   out_2315939053038475241[50] = 0;
   out_2315939053038475241[51] = 0;
   out_2315939053038475241[52] = 0;
   out_2315939053038475241[53] = 0;
   out_2315939053038475241[54] = 0;
   out_2315939053038475241[55] = 0;
   out_2315939053038475241[56] = 1;
   out_2315939053038475241[57] = 0;
   out_2315939053038475241[58] = 0;
   out_2315939053038475241[59] = 0;
   out_2315939053038475241[60] = 0;
   out_2315939053038475241[61] = 0;
   out_2315939053038475241[62] = 0;
   out_2315939053038475241[63] = 0;
   out_2315939053038475241[64] = 0;
   out_2315939053038475241[65] = 0;
}
void h_33(double *state, double *unused, double *out_7133213938072286658) {
   out_7133213938072286658[0] = state[16];
   out_7133213938072286658[1] = state[17];
   out_7133213938072286658[2] = state[18];
}
void H_33(double *state, double *unused, double *out_8358447745327767222) {
   out_8358447745327767222[0] = 0;
   out_8358447745327767222[1] = 0;
   out_8358447745327767222[2] = 0;
   out_8358447745327767222[3] = 0;
   out_8358447745327767222[4] = 0;
   out_8358447745327767222[5] = 0;
   out_8358447745327767222[6] = 0;
   out_8358447745327767222[7] = 0;
   out_8358447745327767222[8] = 0;
   out_8358447745327767222[9] = 0;
   out_8358447745327767222[10] = 0;
   out_8358447745327767222[11] = 0;
   out_8358447745327767222[12] = 0;
   out_8358447745327767222[13] = 0;
   out_8358447745327767222[14] = 0;
   out_8358447745327767222[15] = 0;
   out_8358447745327767222[16] = 1;
   out_8358447745327767222[17] = 0;
   out_8358447745327767222[18] = 0;
   out_8358447745327767222[19] = 0;
   out_8358447745327767222[20] = 0;
   out_8358447745327767222[21] = 0;
   out_8358447745327767222[22] = 0;
   out_8358447745327767222[23] = 0;
   out_8358447745327767222[24] = 0;
   out_8358447745327767222[25] = 0;
   out_8358447745327767222[26] = 0;
   out_8358447745327767222[27] = 0;
   out_8358447745327767222[28] = 0;
   out_8358447745327767222[29] = 0;
   out_8358447745327767222[30] = 0;
   out_8358447745327767222[31] = 0;
   out_8358447745327767222[32] = 0;
   out_8358447745327767222[33] = 0;
   out_8358447745327767222[34] = 0;
   out_8358447745327767222[35] = 0;
   out_8358447745327767222[36] = 0;
   out_8358447745327767222[37] = 0;
   out_8358447745327767222[38] = 0;
   out_8358447745327767222[39] = 1;
   out_8358447745327767222[40] = 0;
   out_8358447745327767222[41] = 0;
   out_8358447745327767222[42] = 0;
   out_8358447745327767222[43] = 0;
   out_8358447745327767222[44] = 0;
   out_8358447745327767222[45] = 0;
   out_8358447745327767222[46] = 0;
   out_8358447745327767222[47] = 0;
   out_8358447745327767222[48] = 0;
   out_8358447745327767222[49] = 0;
   out_8358447745327767222[50] = 0;
   out_8358447745327767222[51] = 0;
   out_8358447745327767222[52] = 0;
   out_8358447745327767222[53] = 0;
   out_8358447745327767222[54] = 0;
   out_8358447745327767222[55] = 0;
   out_8358447745327767222[56] = 0;
   out_8358447745327767222[57] = 0;
   out_8358447745327767222[58] = 0;
   out_8358447745327767222[59] = 0;
   out_8358447745327767222[60] = 0;
   out_8358447745327767222[61] = 0;
   out_8358447745327767222[62] = 1;
   out_8358447745327767222[63] = 0;
   out_8358447745327767222[64] = 0;
   out_8358447745327767222[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_3527272168916747465) {
  H(in_vec, out_3527272168916747465);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6045848623961905122) {
  err_fun(nom_x, delta_x, out_6045848623961905122);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7169558580725911560) {
  inv_err_fun(nom_x, true_x, out_7169558580725911560);
}
void live_H_mod_fun(double *state, double *out_2233486417319465898) {
  H_mod_fun(state, out_2233486417319465898);
}
void live_f_fun(double *state, double dt, double *out_394989617356335065) {
  f_fun(state,  dt, out_394989617356335065);
}
void live_F_fun(double *state, double dt, double *out_4258683105057258686) {
  F_fun(state,  dt, out_4258683105057258686);
}
void live_h_4(double *state, double *unused, double *out_630004665006177454) {
  h_4(state, unused, out_630004665006177454);
}
void live_H_4(double *state, double *unused, double *out_2557128699668065886) {
  H_4(state, unused, out_2557128699668065886);
}
void live_h_9(double *state, double *unused, double *out_305682243973039777) {
  h_9(state, unused, out_305682243973039777);
}
void live_H_9(double *state, double *unused, double *out_2315939053038475241) {
  H_9(state, unused, out_2315939053038475241);
}
void live_h_10(double *state, double *unused, double *out_3290065580213621136) {
  h_10(state, unused, out_3290065580213621136);
}
void live_H_10(double *state, double *unused, double *out_5952593910960601130) {
  H_10(state, unused, out_5952593910960601130);
}
void live_h_12(double *state, double *unused, double *out_4778882070426826303) {
  h_12(state, unused, out_4778882070426826303);
}
void live_H_12(double *state, double *unused, double *out_2462327708363895909) {
  H_12(state, unused, out_2462327708363895909);
}
void live_h_35(double *state, double *unused, double *out_5254255709407145805) {
  h_35(state, unused, out_5254255709407145805);
}
void live_H_35(double *state, double *unused, double *out_5207890740688909618) {
  H_35(state, unused, out_5207890740688909618);
}
void live_h_32(double *state, double *unused, double *out_2690950986992451521) {
  h_32(state, unused, out_2690950986992451521);
}
void live_H_32(double *state, double *unused, double *out_7437548960813029440) {
  H_32(state, unused, out_7437548960813029440);
}
void live_h_13(double *state, double *unused, double *out_2838899766990680185) {
  h_13(state, unused, out_2838899766990680185);
}
void live_H_13(double *state, double *unused, double *out_6243414584483540250) {
  H_13(state, unused, out_6243414584483540250);
}
void live_h_14(double *state, double *unused, double *out_305682243973039777) {
  h_14(state, unused, out_305682243973039777);
}
void live_H_14(double *state, double *unused, double *out_2315939053038475241) {
  H_14(state, unused, out_2315939053038475241);
}
void live_h_33(double *state, double *unused, double *out_7133213938072286658) {
  h_33(state, unused, out_7133213938072286658);
}
void live_H_33(double *state, double *unused, double *out_8358447745327767222) {
  H_33(state, unused, out_8358447745327767222);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
